{"version":3,"sources":["components/Reader.js","Util.js","images/Logo.png","pages/Scan.js","components/ToPrint.js","pages/Print.js","pages/Manual.js","Doc.js","api/spreadsheetID.js","App.js","reportWebVitals.js","index.js"],"names":["delayCount","Reader","props","video","useRef","canvasRef","useState","result","setResult","black","setBlack","tick","periodic","setTimeout","current","readyState","HAVE_ENOUGH_DATA","height","videoHeight","width","videoWidth","canvas","getContext","drawImage","imageData","getImageData","code","jsQR","data","inversionAttempts","console","log","time","Date","useEffect","onScan","isMounted","inter","setInterval","requestAnimationFrame","clearInterval","navigator","mediaDevices","getUserMedia","facingMode","then","stream","srcObject","setAttribute","play","style","filter","ref","hidden","sleep","Promise","resolve","Math","ceil","String","prototype","format","formatted","this","i","arguments","length","regexp","RegExp","replace","toastProp","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","scanList","scanHistory","recentList","shutter","recentCount","addToRecentList","value","push","shift","Scan","toLocaleDateString","todayDate","setTodayDate","currentTimeSec","setCurrentTimeSec","getCurrentTime","toLocaleTimeString","hour12","hour","minute","getTime","id","parseInt","Recent","header","map","entry","checkDuplicate","toast","dismiss","doc","isOpen","tD","sheetsByDate","prop","type","TYPE","WARNING","warning","text","reloadPage","ERROR","error","noSheet","initNoti","getCachedList","has","toString","info","loading","tS","sheet","date","readList","title","SUCCESS","render","loaded","update","initialize","checkId","currentTime","getStudent","noStudent","idx","action","checkIn","valueType","success","name","checkOut","warn","alreadyDone","updateCell","interval","timeSec","second","src","Logo","alt","ret","ToPrint","React","forwardRef","className","children","selectedIds","Set","Print","inputText","setInputText","studentList","setStudentList","printList","setPrintList","useDebounce","searchQuery","searchResults","setSearchResults","selectedCodes","setSelectedCodes","printRef","handlePrint","useReactToPrint","content","results","toLowerCase","resultString","resultObject","add","findMostRecentSheet","sheetInfo","failedToOpen","cachedData","print","idIdx","idList","nameIdx","nameList","list","min","printIdx","succeededToOpen","findStudents","row","includes","sr","query","placeholder","onChange","event","target","onClick","size","c","delete","Manual","sheetKey","selectedId","selectIdImpl","selectId","showEntries","cIn","cOut","cInDisabled","cOutDisabled","formattedValue","disabled","spreadsheetID","production","development","GoogleSpreadsheet","require","ASCII_A","dateFormatOptions","year","month","day","dateDiffInDays","a","b","utc1","UTC","getFullYear","getMonth","getDate","utc2","abs","floor","findHeader","headers","Doc","state","initialized","cachedList","useServiceAccountAuth","config","loadInfo","Object","keys","arg","sheetsByTitle","option","str","found","dateStr","loadCells","createHeader","classIdx","checkInIdx","checkOutIdx","columnCount","getCell","class","rowIdx","ROW_RANGE","ids","lastIdx","rowSize","rowCount","increment","fromCharCode","nullCount","slice","todaySheet","studentNumber","findStudentRow","studentRowNumber","saveUpdatedCells","ID","sheetDate","today","setDate","App","process","APP_NAME","APP_VERSION","openDoc","to","path","element","newestOnTop","rtl","pauseOnFocusLoss","transition","Zoom","icon","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8604089b.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport jsQR from \"jsqr\";\r\nimport \"../App.css\";\r\n\r\nconst PAUSE_COUNT = 5;\r\nlet delayCount = 0;\r\nfunction Reader(props) {\r\n    const video = useRef();\r\n    const canvasRef = useRef();\r\n    const [result, setResult] = useState();\r\n    const [black, setBlack] = useState(false);\r\n\r\n    function shutter() {\r\n        setBlack(true);\r\n        setTimeout(() => {\r\n            setBlack(false);\r\n        }, 300);\r\n    }\r\n\r\n    useEffect(\r\n        function () {\r\n            if (result) {\r\n                props.onScan(result.data);\r\n                setResult(null);\r\n            }\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [result]\r\n    );\r\n\r\n    useEffect(function () {\r\n        let isMounted = true;\r\n        const inter = setInterval(() => {\r\n            if (!isMounted)\r\n            {\r\n                console.log(\"Unmounted reader call\");\r\n                return;\r\n            }\r\n            requestAnimationFrame(tick);\r\n        }, 200);\r\n        return () => {\r\n            console.log(\"Clear interval for reader\");\r\n            isMounted = false;\r\n            clearInterval(inter);\r\n        };\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        function () {\r\n            navigator.mediaDevices\r\n                .getUserMedia({ video: { facingMode: \"environment\" } })\r\n                .then(function (stream) {\r\n                    console.log(stream);\r\n                    try {\r\n                        video.current.srcObject = stream;\r\n                        video.current.setAttribute(\"playsinline\", true); // required to tell iOS safari we don't want fullscreen\r\n                        video.current.play();\r\n                    } catch {}\r\n                });\r\n        },\r\n        [video, canvasRef]\r\n    );\r\n\r\n    function tick() {\r\n        if (props.periodic()) shutter();\r\n        if (--delayCount > 0) return;\r\n        if (video && video.current && video.current.readyState === video.current.HAVE_ENOUGH_DATA) {\r\n            canvasRef.current.height = video.current.videoHeight;\r\n            canvasRef.current.width = video.current.videoWidth;\r\n\r\n            var canvas = canvasRef.current.getContext(\"2d\");\r\n\r\n            canvas.drawImage(\r\n                video.current,\r\n                0,\r\n                0,\r\n                canvasRef.current.width,\r\n                canvasRef.current.height\r\n            );\r\n            var imageData = canvas.getImageData(\r\n                0,\r\n                0,\r\n                canvasRef.current.width,\r\n                canvasRef.current.height\r\n            );\r\n            var code = jsQR(imageData.data, imageData.width, imageData.height, {\r\n                inversionAttempts: \"dontInvert\",\r\n            });\r\n            if (code) {\r\n                console.log(code.data);\r\n                setResult({ data: code.data, time: new Date() });\r\n                delayCount = PAUSE_COUNT;\r\n            }\r\n            return;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <video\r\n                style={{\r\n                    filter: black ? \"brightness(0%)\" : \"brightness(100%)\",\r\n                }}\r\n                ref={video}\r\n            ></video>\r\n            <canvas ref={canvasRef} hidden></canvas>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Reader;\r\n","export const sleep = (time) => {\r\n   return new Promise((resolve) => setTimeout(resolve, Math.ceil(time * 1000)));\r\n};\r\n\r\ninterface String\r\n{\r\n    format: () => String;\r\n}\r\n\r\n// eslint-disable-next-line no-extend-native\r\nString.prototype.format = function() {\r\n    let formatted = this;\r\n    for (let i = 0; i < arguments.length; i++) {\r\n        let regexp = new RegExp('\\\\{'+i+'\\\\}', 'gi');\r\n        formatted = formatted.replace(regexp, arguments[i]);\r\n    }\r\n    return formatted;\r\n}\r\n\r\nexport const toastProp = {\r\n    position: \"top-center\",\r\n    autoClose: 3000,\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined\r\n}\r\n","export default __webpack_public_path__ + \"static/media/Logo.f0526f33.png\";","import React, { useEffect, useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Reader from \"../components/Reader\";\r\nimport { sleep, toastProp } from \"../Util\";\r\n\r\nimport \"./Scan.css\";\r\nimport Logo from \"../images/Logo.png\";\r\nimport text from \"../api/text\";\r\n\r\nconst SCAN_INTERVAL = 1000;\r\nconst CHECK_INTERVAL = 5000;\r\nconst scanList = [];\r\nconst scanHistory = [];\r\nconst recentList = [];\r\nlet shutter = false;\r\n\r\nlet recentCount = 0;\r\nfunction addToRecentList(value) {\r\n    recentList.push([recentCount, ...value]);\r\n    if (recentList.length > 5) recentList.shift();\r\n    recentCount += 1;\r\n}\r\n\r\nfunction Scan(props) {\r\n    const [todayDate, setTodayDate] = useState(new Date().toLocaleDateString());\r\n    const [currentTimeSec, setCurrentTimeSec] = useState(\"\");\r\n\r\n    useEffect(function() {\r\n        console.log(\"Update today date \" + todayDate);\r\n    }, [todayDate]);\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            toast.dismiss();\r\n            console.log(\"Wait for sheet\");\r\n            while (!props.doc.isOpen()) {\r\n                console.log(\"check\");\r\n                await sleep(1.0);\r\n            }\r\n            console.log(\"done\");\r\n            let tD = new Date();\r\n            const result = await props.doc.sheetsByDate(tD);\r\n            if (!result)\r\n            {\r\n                const prop = toastProp;\r\n                prop.autoClose = 3000;\r\n                prop.type = toast.TYPE.WARNING;\r\n                toast.warning(\r\n                    text.reloadPage, toastProp);\r\n                prop.type = toast.TYPE.ERROR;\r\n                toast.error(text.noSheet, toastProp);\r\n                return;\r\n            }\r\n            let initNoti = null;\r\n            const cachedData = props.doc.getCachedList();\r\n            if (!cachedData.has(result.header.id.toString()))\r\n            {\r\n                const prop = toastProp;\r\n                prop.autoClose = false;\r\n                initNoti = toast.info(text.loading, toastProp);\r\n            }\r\n            const tS = result.sheet;\r\n            const date = result.date;\r\n            await props.doc.readList(result.header.id);\r\n            console.log(\"tS\");\r\n            console.log(tS.title);\r\n            setTodayDate(date);\r\n\r\n            if (initNoti)\r\n            {\r\n                const prop = toastProp;\r\n                prop.type = toast.TYPE.SUCCESS;\r\n                prop.autoClose = 3000;\r\n                prop.render = text.loaded;\r\n                toast.update(initNoti, prop);\r\n            }\r\n        }\r\n        initialize();\r\n\r\n    }, [props]);\r\n\r\n    function getCurrentTime() {\r\n        return new Date().toLocaleTimeString(\"en-US\", {\r\n            hour12: true,\r\n            hour: \"numeric\",\r\n            minute: \"numeric\",\r\n        });\r\n    }\r\n\r\n    async function handleScan(data) {\r\n        const tick = new Date().getTime();\r\n        console.log(\"reached function \" + tick + \" \" + data);\r\n        const id = parseInt(data);\r\n        if (id > 0) scanList.push({tick:tick, id:id});\r\n\r\n        return;\r\n    }\r\n\r\n    function checkShutter() {\r\n        const ret = shutter;\r\n        shutter = false;\r\n        return ret;\r\n    }\r\n\r\n    function Recent() {\r\n        const header = (<tr><th id=\"name\">Name</th><th id=\"action\">action</th><th id=\"time\">time</th></tr>);\r\n        return (<table><tbody>{header}\r\n            {recentList.map(entry => (\r\n                <tr key={entry[0]}>\r\n                    <td key=\"name\" id=\"name\">{entry[1]}</td>\r\n                    <td key=\"action\" id=\"action\">{entry[2]}</td>\r\n                    <td key=\"time\" id=\"time\">{entry[3]}</td>\r\n                </tr>\r\n               ))\r\n            }\r\n        </tbody></table>)\r\n    }\r\n\r\n    function checkDuplicate(id) {\r\n        for (let h of scanHistory)\r\n        {\r\n            if (h.id === id) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    // Set QR code scan updater\r\n    useEffect(() => {\r\n        async function checkId(id)\r\n        {\r\n            console.log(\"handling scanning \" + id);\r\n\r\n            // Locate student in the spreadsheet today\r\n            const currentTime = getCurrentTime();\r\n\r\n            const info = await props.doc.getStudent(id);\r\n            if (!info)\r\n            {\r\n                // Student does not exist\r\n                toast.error(text.noStudent, toastProp);\r\n                return;\r\n            }\r\n            console.log(\"Student ID: \" + id + \" Idx:  \" + info.idx);\r\n            // Determine action to take\r\n            let action = null;\r\n            if (info.checkIn.valueType == null) {\r\n                // Check student in\r\n                info.checkIn.value = currentTime;\r\n                action = \"Check In\";\r\n\r\n                toast.success(text.checkIn.format(info.name.value, currentTime), toastProp);\r\n            } else if (info.checkOut.valueType == null) {\r\n                // Check student out\r\n                info.checkOut.value = currentTime;\r\n                action = \"Check Out\";\r\n\r\n                toast.success(text.checkOut.format(info.name.value, currentTime), toastProp);\r\n            } else {\r\n                // Student check in and out are both filled\r\n                toast.warn(\r\n                    text.alreadyDone.format(info.name.value), toastProp);\r\n                return;\r\n            }\r\n            console.log(action + \" \" + currentTime);\r\n            addToRecentList([info.name.value, action, currentTime]);\r\n            await props.doc.updateCell();\r\n            shutter = true;\r\n        }\r\n\r\n        const interval = setInterval(async () => {\r\n            const tick = new Date().getTime();\r\n            let timeSec = new Date().toLocaleTimeString(\"en-US\", {\r\n                hour12: true,\r\n                hour: \"numeric\",\r\n                minute: \"numeric\",\r\n                second: \"numeric\"\r\n            });\r\n            setCurrentTimeSec(timeSec);\r\n            while (scanHistory.length > 0 && tick - scanHistory[0].tick > CHECK_INTERVAL)\r\n            {\r\n                scanHistory.shift();\r\n            }\r\n            while (scanList.length > 0)\r\n            {\r\n                let entry = scanList.shift();\r\n\r\n                if (tick - entry.tick > SCAN_INTERVAL || checkDuplicate(entry.id)) continue;\r\n                scanHistory.push(entry);\r\n                await checkId(entry.id);\r\n                break;\r\n            }\r\n            return () => clearInterval(interval);\r\n        }, 200)\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    return (\r\n        <div id=\"scan\">\r\n            <div id=\"title\" >\r\n                <img id=\"logo\" src={Logo} alt=\"SVKS\"/>\r\n                <h1> SVKS Check In/Out </h1>\r\n            </div>\r\n            <div id=\"clock\">\r\n            {todayDate} {currentTimeSec}\r\n            </div>\r\n            <div id=\"contents\">\r\n                <div id=\"reader\">\r\n                    <Reader\r\n                        onScan={handleScan}\r\n                        periodic={checkShutter}/>\r\n                </div>\r\n                <div id=\"recent\">\r\n                    <h2>\r\n                        Recent Check In/Out\r\n                    </h2>\r\n                    <Recent />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scan;\r\n","import React from \"react\";\r\nexport const ToPrint = React.forwardRef((props, ref) => {\r\n    return (\r\n        <div\r\n            className=\"toPrint\"\r\n            ref={ref}\r\n            style={{\r\n                width: \"max(calc(100vw - 30rem), 80%)\",\r\n                // position: \"absolute\",\r\n                // // top: \"-100%\",\r\n                // zIndex: \"-100\",\r\n            }}\r\n        >\r\n            {props.children}\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default ToPrint;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport \"./Scan.css\"\r\nimport QRCode from \"react-qr-code\";\r\nimport { toast } from \"react-toastify\";\r\nimport Logo from \"../images/Logo.png\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport { useReactToPrint } from \"react-to-print\";\r\nimport { ToPrint } from \"../components/ToPrint\";\r\nimport { sleep, toastProp } from \"../Util\";\r\nimport text from \"../api/text\";\r\n\r\nconst selectedIds = new Set();\r\n\r\nfunction Print(props) {\r\n    const [inputText, setInputText] = useState(\"\");\r\n    const [studentList, setStudentList] = useState([]);\r\n    const [printList, setPrintList] = useState([]);\r\n    const [searchQuery] = useDebounce(inputText, 50);\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [selectedCodes, setSelectedCodes] = useState([]);\r\n\r\n    const printRef = useRef();\r\n    const handlePrint = useReactToPrint({\r\n        content: () => printRef.current,\r\n    });\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            toast.dismiss();\r\n            while (!props.doc.isOpen()) {\r\n                await sleep(0.1);\r\n            }\r\n\r\n            let sheetInfo = await props.doc.findMostRecentSheet();\r\n\r\n            if (!sheetInfo)\r\n            {\r\n                const prop = toastProp;\r\n                prop.autoClose = 3000;\r\n                toast.error(text.failedToOpen, toastProp);\r\n                return;\r\n            }\r\n            const cachedData = props.doc.getCachedList();\r\n            let initNoti = null;\r\n            if (!cachedData.has(sheetInfo.header.id.toString()) ||\r\n                !cachedData.has(sheetInfo.header.name.toString()) ||\r\n                (sheetInfo.header.print &&\r\n                 !(sheetInfo.header.print in cachedData) ))\r\n            {\r\n                console.log(\"Data should be loaded\");\r\n                const prop = toastProp;\r\n                prop.autoClose = false;\r\n                initNoti = toast.info(text.loading, prop);\r\n            }\r\n\r\n\r\n            console.log(sheetInfo.date);\r\n            const idIdx = sheetInfo.header.id;\r\n            const idList = await props.doc.readList(idIdx);\r\n            const nameIdx = sheetInfo.header.name;\r\n            const nameList = await props.doc.readList(nameIdx);\r\n            const list = [];\r\n            for (let i = 0 ; i < Math.min(idList.length, nameList.length); i++)\r\n            {\r\n               list.push({id: idList[i],  name: nameList[i]});\r\n            }\r\n            setStudentList(list);\r\n\r\n            const printIdx = sheetInfo.header.print;\r\n            if (printIdx)\r\n            {\r\n                setPrintList(await props.doc.readList(printIdx));\r\n            }\r\n            else\r\n            {\r\n                setPrintList([]);\r\n            }\r\n            console.log(\"Sheet read \" + list.length);\r\n            if (initNoti) {\r\n                const prop = toastProp;\r\n                prop.type = toast.TYPE.SUCCESS;\r\n                prop.autoClose = 3000;\r\n                prop.render = text.succeededToOpen;\r\n                toast.update(initNoti, prop);\r\n            }\r\n        }\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            async function findStudents(text) {\r\n                let results = [];\r\n\r\n                for (const row of studentList) {\r\n                    if (results.length > 4) break;\r\n                    if ((row.id && row.id.toString().includes(text)) ||\r\n                        (row.name && row.name.toString().includes(text)))\r\n                    {\r\n                        let resultString = `${row.name}:  ${row.id}`;\r\n                        let resultObject = {\r\n                            text: resultString,\r\n                            name: row.name,\r\n                            id: row.id.toString(),\r\n                        };\r\n                        results.push(resultObject);\r\n                        selectedIds.add(row.id);\r\n                    }\r\n                }\r\n                return results;\r\n            }\r\n            async function query() {\r\n                if (searchQuery) {\r\n                    let sr = await findStudents(searchQuery);\r\n                    if (sr.length > 0) setSearchResults(sr);\r\n                } else {\r\n                    setSearchResults([]);\r\n                }\r\n            }\r\n            query();\r\n        },\r\n        [searchQuery, studentList]\r\n    );\r\n\r\n    async function addMarkedStudents() {\r\n        let results = [];\r\n\r\n        for (let i = 0 ; i < printList.length ; i++)\r\n        {\r\n            if (printList[i] && printList[i].toLowerCase() === \"x\" && studentList[i].id != null)\r\n            {\r\n                const entry = studentList[i];\r\n                let resultString = `${entry.name}:  ${entry.id}`;\r\n                let resultObject = {\r\n                    text: resultString,\r\n                    name: entry.name,\r\n                    id: entry.id.toString()\r\n                };\r\n                results.push(resultObject);\r\n                selectedIds.add(entry.id);\r\n            }\r\n        }\r\n        setSelectedCodes([...selectedCodes, ...results]);\r\n    }\r\n\r\n    return (\r\n        <div id=\"print\">\r\n            <div id=\"title\">\r\n                <img id=\"logo\" src={Logo} alt=\"SVKS\" ></img>\r\n                <h1> Print QR Codes </h1>\r\n            </div>\r\n            <div id=\"printContents\" >\r\n                <input id=\"search\"\r\n                    placeholder={\"Search for student or enter a number...\"}\r\n                    value={inputText}\r\n                    onChange={(event) => {\r\n                        setInputText(event.target.value);\r\n                    }} />\r\n\r\n                {searchResults.map((result) => {\r\n                    return (\r\n                        <div key={result.id} id=\"searchResult\"\r\n                            onClick={function () {\r\n                                if (!selectedIds.has(result.id)) {\r\n                                    setSelectedCodes([...selectedCodes, result]);\r\n                                    selectedIds.add(result.id);\r\n                                }\r\n                            }}>\r\n                            <h4> {result.text} </h4>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n            {selectedCodes.length > 0 && (\r\n                <>\r\n                    <div id=\"selected\">\r\n                        {selectedCodes.map((code) => (\r\n                            <div key={code.id} id=\"selectedItem\">\r\n                                <QRCode size={100} value={code.id} />\r\n                                <p id=\"qrName\"> {code.text} </p>\r\n                                <button id=\"deleteButton\"\r\n                                    onClick={function () {\r\n                                        setSelectedCodes(\r\n                                            selectedCodes.filter(\r\n                                                (c) => parseInt(c.id) !== parseInt(code.id)\r\n                                            )\r\n                                        );\r\n                                        selectedIds.delete(code.id);\r\n                                    }}\r\n                                > X </button>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <ToPrint ref={printRef}>\r\n                        <div id=\"qrList\">\r\n                            {selectedCodes.map((code) => (\r\n                                <div key={code.id} id=\"qrCode\" >\r\n                                    <QRCode size={160} value={code.id} />\r\n                                    <p id=\"qrName\" >\r\n                                        {code.text}\r\n                                    </p>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </ToPrint>\r\n                    <button id=\"printButton\" onClick={handlePrint}>\r\n                        Print codes.\r\n                    </button>\r\n                </>\r\n            )}\r\n            <button id=\"printButton\" onClick={addMarkedStudents}>\r\n                Print codes for marked students.\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Print;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Scan.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport Logo from \"../images/Logo.png\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport { sleep, toastProp } from \"../Util\";\r\nimport text from \"../api/text\";\r\n\r\nconst selectedIds = new Set();\r\n\r\nfunction getCurrentTime() {\r\n    return new Date().toLocaleTimeString(\"en-US\", {\r\n        hour12: true,\r\n        hour: \"numeric\",\r\n        minute: \"numeric\",\r\n    });\r\n}\r\n\r\nfunction Manual(props) {\r\n    const [inputText, setInputText] = useState(\"\");\r\n    const [studentList, setStudentList] = useState([]);\r\n    const [searchQuery] = useDebounce(inputText, 50);\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [selectedId, selectIdImpl] = useState({id:-1});\r\n    const [todayDate, setTodayDate] = useState(new Date().toLocaleDateString());\r\n    const [currentTimeSec, setCurrentTimeSec] = useState(\"\");\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            toast.dismiss();\r\n            while (!props.doc.isOpen()) {\r\n                await sleep(0.1);\r\n            }\r\n\r\n            let tD = new Date();\r\n            const sheetInfo = await props.doc.sheetsByDate(tD);\r\n\r\n            if (!sheetInfo)\r\n            {\r\n                const prop = toastProp;\r\n                prop.autoClose = 3000;\r\n                toast.error(text.failedToOpen, toastProp);\r\n                return;\r\n            }\r\n            const cachedData = props.doc.getCachedList();\r\n            let initNoti = null;\r\n            if (!cachedData.has(sheetInfo.header.id.toString()) ||\r\n                !cachedData.has(sheetInfo.header.name.toString()) )\r\n            {\r\n                console.log(\"Data should be loaded\");\r\n                const prop = toastProp;\r\n                prop.autoClose = false;\r\n                initNoti = toast.info(text.loading, prop);\r\n            }\r\n\r\n\r\n            console.log(sheetInfo.date);\r\n            const idIdx = sheetInfo.header.id;\r\n            const idList = await props.doc.readList(idIdx);\r\n            const nameIdx = sheetInfo.header.name;\r\n            const nameList = await props.doc.readList(nameIdx);\r\n            const list = [];\r\n            for (let i = 0 ; i < Math.min(idList.length, nameList.length); i++)\r\n            {\r\n               list.push({id: idList[i],  name: nameList[i]});\r\n            }\r\n            setStudentList(list);\r\n\r\n            console.log(\"Sheet read \" + list.length);\r\n            if (initNoti) {\r\n                const prop = toastProp;\r\n                prop.type = toast.TYPE.SUCCESS;\r\n                prop.autoClose = 3000;\r\n                prop.render = text.succeededToOpen;\r\n                toast.update(initNoti, prop);\r\n            }\r\n            setTodayDate(sheetInfo.date);\r\n        }\r\n        initialize();\r\n        return () => toast.dismiss();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            async function findStudents(text) {\r\n                let results = [];\r\n\r\n                for (const row of studentList) {\r\n                    if (results.length > 4) break;\r\n                    if ((row.id && row.id.toString().includes(text)) ||\r\n                        (row.name && row.name.toString().includes(text)))\r\n                    {\r\n                        let resultString = `${row.id}: ${row.name}`;\r\n                        let resultObject = {\r\n                            id: row.id,\r\n                            name: row.name,\r\n                            text: resultString,\r\n                        };\r\n                        results.push(resultObject);\r\n                        selectedIds.add(row.id);\r\n                    }\r\n                }\r\n                return results;\r\n            }\r\n            async function query() {\r\n                if (searchQuery) {\r\n                    let sr = await findStudents(searchQuery);\r\n                    if (sr.length > 0) setSearchResults(sr);\r\n                } else {\r\n                    setSearchResults([]);\r\n                }\r\n            }\r\n            query();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [searchQuery, studentList]\r\n    );\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(async () => {\r\n            let timeSec = new Date().toLocaleTimeString(\"en-US\", {\r\n                hour12: true,\r\n                hour: \"numeric\",\r\n                minute: \"numeric\",\r\n                second: \"numeric\"\r\n            });\r\n            setCurrentTimeSec(timeSec);\r\n            return () => clearInterval(interval);\r\n        }, 200)\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    const checkIn = (id) => {\r\n        console.log('Check in ' + id);\r\n        const currentTime = getCurrentTime();\r\n        selectedId.checkIn.value = currentTime;\r\n        props.doc.updateCell();\r\n        toast.success(text.checkIn.format(selectedId.name.value, currentTime), toastProp);\r\n    }\r\n\r\n    const checkOut = (id) => {\r\n        console.log('Check out ' + id);\r\n        const currentTime = getCurrentTime();\r\n        selectedId.checkOut.value = currentTime;\r\n        props.doc.updateCell();\r\n        toast.success(text.checkOut.format(selectedId.name.value, currentTime), toastProp);\r\n    }\r\n\r\n    const selectId = async (id) => {\r\n        const info = await props.doc.getStudent(id);\r\n        console.log(\"Select \" + selectedId.id + \" \" + id);\r\n        console.log(selectedId);\r\n        if (!selectedId || !selectedId.id || selectedId.id !== id)\r\n        {\r\n            console.log(\"Selected\");\r\n            console.log(info);\r\n            selectIdImpl({...info, id:id});\r\n        }\r\n        else\r\n        {\r\n            console.log(\"Deselect\");\r\n            selectIdImpl({id:-1});\r\n        }\r\n    }\r\n\r\n    const showEntries = (result) => {\r\n        let cIn, cOut;\r\n        let cInDisabled;\r\n        let cOutDisabled;\r\n        cInDisabled = cOutDisabled = false;\r\n        cIn = \"Check In\";\r\n        cOut = \"Check Out\";\r\n        const hidden = (selectedId.id !== result.id);\r\n        if (!hidden)\r\n        {\r\n            if (selectedId.checkIn.valueType)\r\n            {\r\n                cIn = \"Check In: \" + selectedId.checkIn.formattedValue;\r\n                cInDisabled = true;\r\n            }\r\n            if (selectedId.checkOut.valueType)\r\n            {\r\n                cOut = \"Check Out: \" + selectedId.checkOut.formattedValue;\r\n                cOutDisabled = true;\r\n            }\r\n        }\r\n//                    <Dropdown.Item id=\"searchResult\" onSelect={() => {checkIn(result.idx); }}>{cIn}</Dropdown.Item>\r\n/*\r\n        return (<Dropdown title={result.text} key={result.idx} id=\"searchResult\">\r\n                    <Dropdown.Item id=\"checkInOut\" onSelect={() => {checkIn(result.idx); }} disabled={true}>{cIn}</Dropdown.Item>\r\n                    <Dropdown.Item id=\"checkInOut\" onSelect={() => {checkOut(result.idx); }}>{cOut}</Dropdown.Item>\r\n                </Dropdown>);\r\n*/\r\n        return (<div><button type=\"button\" key={result.id} id=\"searchResult\" onClick={async () => {await selectId(result.id);}}> {result.text} </button>\r\n                    <div hidden={hidden}>\r\n                        <button type=\"button\" key=\"checkIn\" id=\"checkInOut\" disabled={cInDisabled} onClick={() => {checkIn(result.id)}}> {cIn} </button>\r\n                        <button type=\"button\" key=\"checkOut\" id=\"checkInOut\" disabled={cOutDisabled} onClick={() => {checkOut(result.id)}}> {cOut} </button>\r\n                    </div>\r\n                </div>);\r\n    }\r\n\r\n    return (\r\n        <div id=\"manual\">\r\n            <div key=\"title\" id=\"title\">\r\n                <img id=\"logo\" src={Logo} alt=\"SVKS\" ></img>\r\n                <h1> Manual Check In/Out </h1>\r\n            </div>\r\n            <div id=\"clock\">\r\n            {todayDate} {currentTimeSec}\r\n            </div>\r\n            <div id=\"printContents\" >\r\n                <input id=\"search\"\r\n                    placeholder={\"Search for student or enter a number...\"}\r\n                    value={inputText}\r\n                    onChange={(event) => {\r\n                        setInputText(event.target.value);\r\n                    }} />\r\n\r\n                {   searchResults.map((result) => {\r\n                    return showEntries(result);\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Manual;\r\n","import { spreadsheetID } from \"./api/spreadsheetID\";\r\nimport config from \"./api/config\";\r\nimport header from \"./api/header\";\r\n\r\nconst { GoogleSpreadsheet } = require(\"google-spreadsheet\");\r\n\r\nconst MAX_COLUMN = 26;\r\nconst ASCII_A = 65;\r\n\r\nlet sheetKey;\r\nif (process.env.NODE_ENV === \"development\")\r\n{\r\n    console.log(\"Development mode\");\r\n    sheetKey = \"development\";\r\n}\r\nelse\r\n{\r\n    console.log(\"Production mode\");\r\n    sheetKey = \"production\";\r\n}\r\n\r\nconst dateFormatOptions = [\r\n    { year: \"numeric\", month: \"numeric\", day: \"numeric\" },\r\n    { year: \"2-digit\", month: \"numeric\", day: \"numeric\" },\r\n    { year: \"numeric\", month: \"2-digit\", day: \"numeric\" },\r\n    { year: \"2-digit\", month: \"2-digit\", day: \"numeric\" },\r\n    { year: \"numeric\", month: \"numeric\", day: \"2-digit\" },\r\n    { year: \"2-digit\", month: \"numeric\", day: \"2-digit\" },\r\n    { year: \"numeric\", month: \"2-digit\", day: \"2-digit\" },\r\n    { year: \"2-digit\", month: \"2-digit\", day: \"2-digit\" },\r\n];\r\n\r\nconst _MS_PER_DAY = 1000 * 60 * 60 * 24;\r\nfunction dateDiffInDays(a, b) {\r\n    // https://stackoverflow.com/questions/3224834/get-difference-between-2-dates-in-javascript\r\n    // Discard the time and time-zone information.\r\n    const utc1 = Date.UTC(a.getFullYear(), a.getMonth(), a.getDate());\r\n    const utc2 = Date.UTC(b.getFullYear(), b.getMonth(), b.getDate());\r\n\r\n    return Math.abs(Math.floor((utc2 - utc1) / _MS_PER_DAY));\r\n}\r\n\r\n\r\nfunction findHeader(value, headers)\r\n{\r\n    for (let h of headers)\r\n        if (h === value) return true ;\r\n\r\n    return false;\r\n}\r\n\r\nclass Doc {\r\n    constructor() {\r\n        console.log(\"Create Doc class\");\r\n        const doc = new GoogleSpreadsheet(spreadsheetID[sheetKey]);\r\n        const sheetInfo = {sheet: null, date: null, header: null, cachedList: {}};\r\n        this.state = {doc: doc, initialized: false, sheetInfo: sheetInfo};\r\n    }\r\n\r\n    async openDoc() {\r\n        console.log('try to read sheet');\r\n        await this.state.doc.useServiceAccountAuth(config);\r\n        console.log('Auth Done');\r\n        await this.state.doc.loadInfo(); // loads document properties and worksheets\r\n        console.log('Done');\r\n        this.state.initialized = true;\r\n    }\r\n\r\n    isOpen() {\r\n        return this.state.initialized;\r\n    }\r\n\r\n    getCachedList() {\r\n        return new Set(Object.keys(this.state.sheetInfo.cachedList));\r\n    }\r\n\r\n    async sheetsByTitle(arg) {\r\n        this.state.sheetInfo.sheet = await this.state.doc.sheetsByTitle[arg];\r\n        this.state.sheetInfo.date = arg;\r\n\r\n        return this.state.sheetInfo;\r\n    }\r\n\r\n    async sheetsByDate(date) {\r\n        for (let option of dateFormatOptions) {\r\n            const str = date.toLocaleDateString(\"en-US\", option);\r\n            if (this.state.sheetInfo.date && str === this.state.sheetInfo.date)\r\n            {\r\n                console.log(\"Found \" + str);\r\n                console.log(this.state.sheetInfo);\r\n                return this.state.sheetInfo;\r\n            }\r\n        }\r\n        let found = false;\r\n        for (let option of dateFormatOptions) {\r\n            const dateStr = date.toLocaleDateString(\"en-US\", option);\r\n            const sheet = await this.state.doc.sheetsByTitle[dateStr];\r\n            if (sheet) {\r\n                this.state.sheetInfo.date = dateStr;\r\n                this.state.sheetInfo.sheet = sheet;\r\n                found = true;\r\n                break;\r\n            }\r\n        }\r\n        if (!found)\r\n            return null;\r\n\r\n        console.log(\"Found sheet \" + this.state.sheetInfo.sheet);\r\n\r\n        // Find spreadsheet headers\r\n        await this.state.sheetInfo.sheet.loadCells('A1:Z1');\r\n        const header = this.createHeader(this.state.sheetInfo.sheet);\r\n        console.log(header);\r\n\r\n        this.state.sheetInfo.header = header;\r\n\r\n        return this.state.sheetInfo;\r\n    }\r\n\r\n    createHeader(tS = this.state.sheetInfo.sheet)\r\n    {\r\n        let idIdx = null;\r\n        let nameIdx = null;\r\n        let classIdx = null;\r\n        let checkInIdx = null;\r\n        let checkOutIdx = null;\r\n        let printIdx = null;\r\n        if (!tS)\r\n            return {};\r\n        for (let i = 0 ; i < Math.min(MAX_COLUMN, tS.columnCount) ; i++)\r\n        {\r\n            const entry = tS.getCell(0, i);\r\n            if (entry.valueType == null) continue;\r\n            nameIdx = (findHeader(entry.value, header.name)) ? i : nameIdx;\r\n            idIdx = (findHeader(entry.value, header.id)) ? i : idIdx;\r\n            classIdx = (findHeader(entry.value, header.class)) ? i : classIdx;\r\n            checkInIdx = (findHeader(entry.value, header.checkIn)) ? i : checkInIdx;\r\n            checkOutIdx = (findHeader(entry.value, header.checkOut)) ? i : checkOutIdx;\r\n            printIdx = (findHeader(entry.value, header.print)) ? i : printIdx;\r\n        }\r\n        return {id:idIdx, name:nameIdx, class:classIdx, checkIn:checkInIdx, checkOut:checkOutIdx, print:printIdx};\r\n    }\r\n\r\n    async readList(idIdx, tS = this.state.sheetInfo.sheet)\r\n    {\r\n        if (idIdx in this.state.sheetInfo.cachedList)\r\n            return this.state.sheetInfo.cachedList[idIdx];\r\n\r\n        let rowIdx = 0;\r\n        const ROW_RANGE = 100;\r\n        let ids = [];\r\n        if (!tS)\r\n            return [];\r\n        let lastIdx = null;\r\n        const rowSize = tS.rowCount;\r\n        while (rowIdx < rowSize-1)\r\n        {\r\n            // Read ROW_RANGE cell\r\n            const increment = Math.min(rowSize - rowIdx, ROW_RANGE);\r\n            const query = String.fromCharCode(ASCII_A+idIdx) + (rowIdx+1) + \":\" +\r\n                          String.fromCharCode(ASCII_A+idIdx) + (rowIdx+increment);\r\n            console.log(toString(idIdx) + \" \" + query);\r\n            await tS.loadCells(query);\r\n\r\n            let nullCount = 0;\r\n            for (let i = 0 ; i < ROW_RANGE ; i++)\r\n            {\r\n                const entry = tS.getCell(rowIdx + i, idIdx);\r\n                let id = null;\r\n                if (entry.valueType == null)\r\n                {\r\n                    nullCount++;\r\n                }\r\n                else\r\n                {\r\n                    id = entry.value;\r\n                    lastIdx = rowIdx + i;\r\n                }\r\n                ids.push(id);\r\n            }\r\n            // If all ROW_RANGE cells are empty, stop reading\r\n            if (nullCount === ROW_RANGE) break;\r\n            rowIdx += increment;\r\n        }\r\n        ids[0] = \"\";\r\n        ids = ids.slice(0, lastIdx+1);\r\n\r\n        this.state.sheetInfo.cachedList[idIdx] = ids;\r\n\r\n        return ids;\r\n    }\r\n\r\n    async getStudent(id) {\r\n        const todaySheet = this.state.sheetInfo.sheet;\r\n        if (!todaySheet)\r\n            return null;\r\n\r\n        // Locate student in the spreadsheet today\r\n        let studentNumber = id;\r\n        let studentRowNumber = await this.findStudentRow(studentNumber);\r\n\r\n        if (!studentRowNumber) {\r\n            return null;\r\n        }\r\n\r\n        const header = this.state.sheetInfo.header;\r\n        // Student ID is found\r\n        console.log(\"Student ID: \" + studentNumber + \" Index:\" + studentRowNumber);\r\n        const query = String.fromCharCode(ASCII_A) + (studentRowNumber) + \":\" +\r\n                      String.fromCharCode(ASCII_A+MAX_COLUMN-1) + (studentRowNumber);\r\n        console.log(query);\r\n        await todaySheet.loadCells(query);\r\n        const idx = studentRowNumber - 1;\r\n        console.log(\"Get Cell \" + idx + \" \" + header.name);\r\n        const name = todaySheet.getCell(idx, header.name);\r\n        const checkIn = todaySheet.getCell(idx, header.checkIn);\r\n        const checkOut = todaySheet.getCell(idx, header.checkOut);\r\n\r\n        return {idx: idx, name: name, checkIn: checkIn, checkOut: checkOut};\r\n    }\r\n\r\n    async updateCell()\r\n    {\r\n        const todaySheet = this.state.sheetInfo.sheet;\r\n        if (!todaySheet)\r\n            return null;\r\n        await todaySheet.saveUpdatedCells();\r\n    }\r\n\r\n    async findStudentRow(ID) {\r\n        const idList = await this.readList(this.state.sheetInfo.header.id);\r\n        console.log(\"finding student row \" + idList.length);\r\n        for (let i = 0 ; i < idList.length ; i++)\r\n        {\r\n            if (idList[i] && idList[i] === ID) return i + 1;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    async findMostRecentSheet() {\r\n        let sheetDate = new Date();\r\n        let today = new Date();\r\n        while (dateDiffInDays(today, sheetDate) < 40)\r\n        {\r\n            const sheetInfo = await this.sheetsByDate(sheetDate);\r\n            if (sheetInfo)\r\n                return sheetInfo;\r\n            sheetDate.setDate(sheetDate.getDate() - 1);\r\n        }\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default Doc;\r\n\r\n","export const spreadsheetID = {production: \"1FqeRNFlZZ7aJdtYRmjZ1kRb2-sarN9aoTMGyu4jhGKs\",\r\n                              development: \"12AWolV6lI99LM6NNP1bUwYanAuNDSWRJI8X4-ozM98Q\"};\r\n","import React, { useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport Scan from \"./pages/Scan\";\r\nimport Print from \"./pages/Print\";\r\nimport Manual from \"./pages/Manual\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { Zoom } from \"react-toastify\";\r\nimport { HashRouter as Router, Routes, Route, Link} from \"react-router-dom\";\r\nimport Doc from \"./Doc\";\r\n\r\nconst doc = new Doc();\r\nfunction App() {\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"Initialize app\");\r\n            console.log(process.env.APP_NAME);\r\n            console.log(process.env.APP_VERSION);\r\n            doc.openDoc();\r\n        }\r\n        initialize();\r\n    }, []);\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <nav id=\"nav\">\r\n                    <table id=\"nav\"><tbody>\r\n                    <tr>\r\n                        <td id=\"nav_item\">\r\n                            <Link to=\"/\"><button id=\"nav_scan\">Scan</button></Link>\r\n                        </td>\r\n                        <td id=\"nav_item\">\r\n                            <Link to=\"/manual\"><button id=\"nav_manual\">Manual</button></Link>\r\n                        </td>\r\n                        <td id=\"nav_item\">\r\n                            <Link to=\"/print\"><button id=\"nav_print\">Print</button></Link>\r\n                        </td>\r\n                    </tr>\r\n                    </tbody></table>\r\n                </nav>\r\n            </div>\r\n\r\n            <hr />\r\n\r\n            <div className=\"App\">\r\n                <Routes>\r\n                    <Route path=\"/\" element={<Scan doc={doc} />} />\r\n                    <Route path=\"/print\" element={<Print doc={doc}/>} />\r\n                    <Route path=\"/manual\" element={<Manual doc={doc}/>} />\r\n                </Routes>\r\n\r\n                <ToastContainer\r\n                    position=\"bottom-center\"\r\n                    autoClose={3000}\r\n                    hideProgressBar={false}\r\n                    newestOnTop\r\n                    closeOnClick\r\n                    rtl={false}\r\n                    draggable\r\n                    pauseOnHover\r\n                    pauseOnFocusLoss={false}\r\n                    transition={Zoom}\r\n                    icon={false}\r\n                />\r\n                <h2>\r\n                    v {process.env.REACT_APP_VERSION}\r\n                </h2>\r\n            </div>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}